<? namespace Bitrix\Main\UpdateSystem;$GLOBALS['____160914180']= array(base64_decode('ZnVuY3Rpb25fZXhpc3Rz'),base64_decode('ZG'.'VmaW'.'5'.'lZA=='),base64_decode('cGh'.'wdmVyc2lvbg=='),base64_decode('Y2xhc'.'3NfZXhpc3Rz'));if(!function_exists(__NAMESPACE__.'\\___238612136')){function ___238612136($_1082244738){static $_827578251= false; if($_827578251 == false) $_827578251=array('TEl'.'DRU'.'5TRV9LRVk=','bGFuZw==','dXR'.'m','WQ='.'=','c3RhYmxl',''.'bWFpb'.'g'.'='.'=','c3RhY'.'mx'.'lX3Z'.'lcnN'.'pb25z'.'X29ubHk'.'=',''.'WQ==',''.'Q'.'0FOR1pJ'.'UA==','Z3'.'p'.'j'.'b21wcm'.'V'.'zcw==','WQ==','T'.'g==','U1'.'VQR'.'F9EQ'.'lM=','W'.'E'.'U=','W'.'Q==','Tg==',''.'U1VQRF9VUlM=','Q0xJRU5'.'UX'.'1N'.'JVEU=','U0VSVkVSX05BTUU=','c3Bk','b'.'W'.'Fp'.'b'.'g'.'==','Y3JjX2NvZGU'.'=','','ZGJ2',''.'U1V'.'QR'.'F9WRVI=',''.'VVBEQVRF'.'X1NZU'.'1RF'.'TV9W'.'RVJTSU9OX0E'.'=','','U1V'.'QR'.'F'.'9'.'TUl'.'M=','UlU=',''.'U1VQR'.'F9DTVA=','Tg='.'=','U1VQR'.'F9TVFM=','UkE'.'=',''.'TElDRU5'.'TRV9TSUdO'.'RU'.'Q=','Q0xJRU5UX1BIUFZ'.'FUg==','Tkd'.'J'.'Tlg=','bWF'.'p'.'b'.'g==','dXBk'.'YXRlX3VzZV9u'.'Z2lueA'.'==','WQ==','U01E','bWF'.'pbg==','dXBkYX'.'RlX3NhZmVfbW9kZ'.'Q==','Tg'.'==','VkVS'.'U0lP'.'Tg'.'==',''.'VFlQR'.'U5'.'D','Q0'.'hIQg==','SFRUU'.'F9'.'IT'.'1NU','Q1NB'.'Q'.'g==','U0VS'.'V'.'kVSX0F'.'ERFI'.'=','U1V'.'J'.'RA='.'=','QVBQ'.'T'.'ElDQVRJT04'.'=','','Y'.'2x1c3Rl'.'cg='.'=',''.'Q0'.'NsdX'.'N'.'0ZX'.'I=',''.'PUFDVElWRQ==','WQ==','LQ==',''.'bWF'.'pbg'.'==',''.'Tg==','RA='.'=','RQ==','VA==','Rg='.'=','','');return base64_decode($_827578251[$_1082244738]);}}; use Bitrix\Main\Application; use Bitrix\Main\License; use Bitrix\Main\Loader; use Bitrix\Main\SystemException; use Bitrix\Main\SiteTable; class PortalInfo{ private License $_386951454; public function __construct(){ $this->_386951454= Application::getInstance()->getLicense();} public function common(): array{ global $DB; return[ ___238612136(0) => $this->_386951454->getHashLicenseKey(), ___238612136(1) => LANGUAGE_ID, ___238612136(2) => ___238612136(3), ___238612136(4) => \COption::GetOptionString(___238612136(5), ___238612136(6), ___238612136(7)), ___238612136(8) => $GLOBALS['____160914180'][0](___238612136(9))? ___238612136(10): ___238612136(11), ___238612136(12) => $DB->type, ___238612136(13) =>(isset($DB->_1356409481) && $DB->_1356409481)? ___238612136(14): ___238612136(15), ___238612136(16) => $this->_386951454->getActiveUsersCount(), ___238612136(17) => $_SERVER[___238612136(18)], ___238612136(19) => \COption::GetOptionString(___238612136(20), ___238612136(21), ___238612136(22)), ___238612136(23) => $this->__1650120465(), ___238612136(24) => $GLOBALS['____160914180'][1](___238612136(25))? UPDATE_SYSTEM_VERSION_A: ___238612136(26), ___238612136(27) => $this->__595177958() ?? ___238612136(28), ___238612136(29) => ___238612136(30), ___238612136(31) => $this->__252539149() ?? ___238612136(32), ___238612136(33) => $this->__935353670(), ___238612136(34) => $GLOBALS['____160914180'][2](), ___238612136(35) => \COption::GetOptionString(___238612136(36), ___238612136(37), ___238612136(38)), ___238612136(39) => \COption::GetOptionString(___238612136(40), ___238612136(41), ___238612136(42)), ___238612136(43) => SM_VERSION, ___238612136(44) => $this->getLicenseType(), ___238612136(45) => $_SERVER[___238612136(46)], ___238612136(47) => $_SERVER[___238612136(48)], ___238612136(49) => $GLOBALS[___238612136(50)]->GetServerUniqID(),];} private function __1650120465(): string{ global $DB; $_696128260= $DB->GetVersion(); return $_696128260 !== false? $_696128260: ___238612136(51);} private function __595177958():?int{ if(Loader::includeModule(___238612136(52)) && $GLOBALS['____160914180'][3](___238612136(53))){ return \CCluster::getServersCount();} return null;} private function __252539149():?int{ return SiteTable::getCount([___238612136(54) => ___238612136(55)]);} private function __935353670(): string{ $_129998848= \CUpdateClient::getNewLicenseSignedKey(); return $_129998848.___238612136(56).\COption::GetOptionString(___238612136(57), $_129998848, ___238612136(58));} public function getLicenseType(): string{ if($this->_386951454->isDemo()){ return ___238612136(59);} elseif($this->_386951454->isEncoded()){ return ___238612136(60);} elseif($this->_386951454->isTimeBound()){ return ___238612136(61);} else{ return ___238612136(62);}} public function getModules(): array{ $_2053635544= ___238612136(63); $_519879727= \CUpdateClient::GetCurrentModules($_2053635544); if(!empty($_2053635544)){ throw new SystemException($_2053635544);} return $_519879727;} public function getLanguages(): array{ $_2053635544= ___238612136(64); $_1228184086= \CUpdateClient::GetCurrentLanguages($_2053635544); if(!empty($_2053635544)){ throw new SystemException($_2053635544);} return $_1228184086;}}?>