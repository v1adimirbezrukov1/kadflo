this.BX=this.BX||{};this.BX.Vote=this.BX.Vote||{};(function(t,e,s,o,i,n,r,a,l){"use strict";const d=t=>i.Loc.getMessage(t);const u=(t,e)=>i.Loc.getMessagePlural(t,e,{"#COUNT#":e});const c={name:"VoteQuestion",props:{contextId:{type:String,required:true},isLoading:{type:Boolean,default:false},question:{type:Object,required:true},answers:{type:Object,required:true},isUserVoted:{type:Boolean,default:false},isCompleted:{type:Boolean,default:false}},emits:["answersSelected"],data(){return{selectedRadioBtn:null,selectedCheckboxes:[]}},computed:{answersCollection(){return this.app.getStore().getters["vote/getAnswerCollection"]},formattedAnswers(){const t={};Object.keys(this.answers).forEach((e=>{const s=this.answers[e];const o=this.answersCollection[s.id]||{};t[e]={...s,counter:o.counter||0,percent:o.percent}}));return t},getCurrentUserVotes(){return this.app.getStore().getters["vote/getCurrentUserVotes"][this.question.id]||[]},canShowResults(){return this.isUserVoted||this.isCompleted}},watch:{isLoading(t){if(t){this.selectedCheckboxes=this.getCurrentUserVotes||[];this.selectedRadioBtn=this.getCurrentUserVotes[0]}},isUserVoted(t){if(t){return}this.selectedCheckboxes=[];this.selectedRadioBtn=null}},created(){this.app=r.VoteApplication.init()},methods:{radioChanged(){this.emitAnswersSelectedWithValue([this.selectedRadioBtn])},checkboxChanged(){this.emitAnswersSelectedWithValue(this.selectedCheckboxes)},emitAnswersSelectedWithValue(t){const e={questionId:this.question.id,answerIds:t};this.$emit("answersSelected",e)},hasCurrentUserVote(t){if(this.canShowResults){return this.app.getStore().getters["vote/hasCurrentUserVote"](this.question.id,t)}return this.selectedCheckboxes.includes(t)},getUniqueAnswerId(t){return`vote-answer-${t}-${this.contextId}`}},template:`\n\t\t<div class="vote__question">\n\t\t\t<div class="vote__question-text">{{ question.question }}</div>\n\t\t</div>\n\t\t<div :class="['vote__answers', { '--voted': canShowResults }]">\n\t\t\t<div v-for="(answer, answerKey) in formattedAnswers" \n\t\t\t\t :key="answerKey"\n\t\t\t\t :class="['vote__answer', { '--selected': hasCurrentUserVote(answer.id) }]"\n\t\t\t>\n\t\t\t\t<input\n\t\t\t\t\tclass="vote__answer-select"\n\t\t\t\t\tv-if="!isLoading && !question.isMultiple"\n\t\t\t\t\ttype="radio"\n\t\t\t\t\tv-model="selectedRadioBtn"\n\t\t\t\t\t:value="answer.id"\n\t\t\t\t\t:id="getUniqueAnswerId(answer.id)"\n\t\t\t\t\t@change="radioChanged"\n\t\t\t\t/>\n\t\t\t\t<input\n\t\t\t\t\tclass="vote__answer-select --checkbox"\n\t\t\t\t\tv-if="!isLoading && question.isMultiple"\n\t\t\t\t\ttype="checkbox"\n\t\t\t\t\tv-model="selectedCheckboxes"\n\t\t\t\t\t:value="answer.id"\n\t\t\t\t\t:id="getUniqueAnswerId(answer.id)"\n\t\t\t\t\t@change="checkboxChanged"\n\t\t\t\t/>\n\t\t\t\t<div class="vote__progress-bar">\n\t\t\t\t\t<label class='vote__answer-text' :for="getUniqueAnswerId(answer.id)">{{ answer.message }}</label>\n\t\t\t\t\t<div v-if="canShowResults" class="vote__answer-percent">\n\t\t\t\t\t\t<span>{{ answer.percent }}</span>\n\t\t\t\t\t\t%\n\t\t\t\t\t</div>\n\t\t\t\t\t<div v-if="canShowResults" class="vote__progress-bar-fill"\n\t\t\t\t\t\t :style="{\n\t\t\t\t\t\twidth: answer.percent + '%'\n\t\t\t\t\t  }"\n\t\t\t\t\t></div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t`};const p=Object.freeze({vote:"vote",disable:"disable",showResults:"show"});const h={name:"ButtonArea",components:{VoteQuestion:c},props:{question:{type:Object,required:true},isLoading:{type:Boolean,required:true},isUserVoted:{type:Boolean,default:false},isCompleted:{type:Boolean,default:false},isBtnActive:{type:Boolean,default:false}},emits:["onClickVoteButton","showResults"],computed:{isMultipleQuestion(){if(this.isLoading){return false}return this.app.getStore().getters["vote/getQuestionCollection"][this.question.id].isMultiple},buttonType(){if(this.isUserVoted||this.isCompleted){return p.showResults}if(this.isMultipleQuestion){return p.vote}return p.disable},isBtnAvailableToVote(){return this.isBtnActive&&this.buttonType===p.vote},buttonClass(){return`--${this.buttonType}`},getSummaryText(){if(this.question.totalCounter>0){return u("VOTE_SUMMARY_COUNT",this.question.totalCounter)}return d("VOTE_SUMMARY_NO_VOTES")},getButtonText(){if(this.isUserVoted||!this.isMultipleQuestion||this.isCompleted){return this.getSummaryText}return d("VOTE_BUTTON")}},created(){this.app=r.VoteApplication.init()},methods:{handleButtonClick(){if(this.buttonType===p.vote){this.$emit("onClickVoteButton")}else if(this.buttonType===p.showResults){this.$emit("showResults")}}},template:`\n\t\t<div class="vote-display-btn-wrapper">\n\t\t\t<button class="vote-display-btn"\n\t\t\t\t\t@click="handleButtonClick"\n\t\t\t\t\t:class="[buttonClass, { '--active': isBtnAvailableToVote }]"\n\t\t\t\t\ttype="button"\n\t\t\t>\n\t\t\t\t{{ getButtonText }}\n\t\t\t</button>\n\t\t</div>\n\t`};const v={name:"VotePopup",components:{Popup:l.Popup},emits:["confirm","cancel"],computed:{getMessage:()=>d,popupOptions(){return{width:374,className:"vote-display__popup"}}},template:`\n\t\t<Popup\n\t\t\t:options="popupOptions" @close="$emit('cancel')"\n\t\t\tid="vote-display-popup"\n\t\t>\n\t\t\t<div class="vote-display__popup-content">\n\t\t\t\t<div class="vote-display__popup-title">\n\t\t\t\t\t{{ getMessage('VOTE_POPUP_TITLE') }}\n\t\t\t\t</div>\n\t\t\t\t<div class="vote-display__popup-text">\n\t\t\t\t\t{{ getMessage('VOTE_POPUP_TEXT') }}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class="vote-display__popup-footer">\n\t\t\t\t<button class="vote-display__popup-btn --complete" @click="$emit('confirm')">\n\t\t\t\t\t{{ getMessage('VOTE_POPUP_BTN_COMPLETE') }}\n\t\t\t\t</button>\n\t\t\t\t<button class="vote-display__popup-btn --cancel" @click="$emit('cancel')">\n\t\t\t\t\t{{ getMessage('VOTE_POPUP_BTN_CANCEL') }}\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</Popup>\n\t`};const V=2;const m={name:"VoteDisplay",components:{VoteQuestion:c,ButtonArea:h,Loader:o.Loader,VotePopup:v},props:{voteItem:{type:Object,required:true},entityId:{type:Number,required:true},entityType:{type:String,required:true},contextId:{type:String,required:true}},emits:["vote","revokeVote","copyLink"],data(){return{isLoading:true,isShowPopup:false,questionAnswers:{}}},computed:{firstQuestion(){var t,e;const s=Object.keys((t=this.voteItem.data)==null?void 0:t.questions)[0];return(e=this.voteItem.data)==null?void 0:e.questions[s]},questionCollection(){return this.app.getStore().getters["vote/getQuestionCollection"]},voteCollection(){return this.app.getStore().getters["vote/getVoteCollection"]},currentVote(){return this.voteCollection[this.voteItem.id]},formattedQuestion(){const t=this.questionCollection[this.firstQuestion.id]||{};return{...this.firstQuestion,totalCounter:t.totalCounter,isMultiple:t.isMultiple}},isUserVoted(){if(this.isLoading){return false}return this.currentVote.isVoted},canRevoke(){if(this.isLoading){return false}return this.currentVote.canRevoke&&this.isUserVoted&&!this.isCompleted},canEdit(){if(this.isLoading){return false}return this.currentVote.canEdit},isAnonymous(){var t;return((t=this.voteItem.data)==null?void 0:t.anonymity)===V},isCompleted(){if(this.isLoading){return false}return this.currentVote.isCompleted},hasSelectedAnswers(){return i.Type.isArrayFilled(this.questionAnswers[this.firstQuestion.id])},getVoteTypeText(){return this.isAnonymous?d("VOTE_ANONYMOUS"):d("VOTE_PUBLIC")},getCompletionVoteText(){return d("VOTE_NOTICE_COMPLETED")}},created(){this.app=r.VoteApplication.init();this.voteService=new s.ImVoteService(this.entityType,this.entityId)},async mounted(){this.loadAttach()},methods:{notifyAjaxError(t){if(i.Type.isObject(t)&&i.Type.isArrayFilled(t.errors)){var s,o;const n=(s=t==null?void 0:(o=t.errors[0])==null?void 0:o.message)!=null?s:"Unexpected error";e.UI.Notification.Center.notify({content:i.Text.encode(n),autoHideDelay:4e3})}else{console.error(t)}},async answersSelected(t){this.questionAnswers[t.questionId]=t.answerIds;const e=this.questionCollection[t.questionId];if(e.isMultiple||this.isUserVoted){return}void this.submitVote()},async submitVote(){this.isLoading=true;try{this.app.getStore().dispatch("vote/setUserVoted",{voteId:this.currentVote.id});await this.voteService.sendVote(this.questionAnswers);this.$emit("vote");this.questionAnswers={}}catch(t){console.error("Vote: submit vote error",t);this.app.getStore().dispatch("vote/resetUserVoted",{voteId:this.currentVote.id});BX.UI.Notification.Center.notify({content:d("VOTE_NOTICE_ERROR_MESSAGE_SUBMIT"),autoHideDelay:4e3})}this.isLoading=false},onClickVoteButton(){if(i.Type.isArrayFilled(this.questionAnswers[this.formattedQuestion.id])){this.submitVote()}},async showResults(){BX.SidePanel.Instance.open(this.currentVote.resultUrl,{cacheable:false,width:480,copyLinkLabel:true,events:{onOpen:({slider:t})=>{const e=t.getCopyLinkLabel();e.setOnclick((()=>{this.$emit("copyLink")}))}}})},async loadAttach(){try{await this.voteService.load();this.isLoading=false}catch(t){this.notifyAjaxError(t)}},async completeVote(){try{this.app.getStore().dispatch("vote/setVoteCompleted",{voteId:this.currentVote.id});await this.voteService.completeVote()}catch(t){console.error("Vote: complete vote error",t);this.app.getStore().dispatch("vote/resetVoteCompleted",{voteId:this.currentVote.id});BX.UI.Notification.Center.notify({content:d("VOTE_NOTICE_ERROR_MESSAGE_COMPLETE"),autoHideDelay:4e3})}},onCompetePopupConfirm(){this.isShowPopup=false;this.completeVote()},onCompetePopupCancel(){this.isShowPopup=false},async recallVote(){const t=this.app.getStore().getters["vote/getCurrentUserVotes"][this.firstQuestion.id];try{this.app.getStore().dispatch("vote/clearVotes",{questionId:this.firstQuestion.id,voteId:this.currentVote.id});this.app.getStore().dispatch("vote/resetUserVoted",{voteId:this.currentVote.id});await this.voteService.revokeVote();this.$emit("revokeVote")}catch(e){console.error("Vote: recall vote error",e);this.app.getStore().dispatch("vote/updateCurrentUserVotes",{questionId:this.firstQuestion.id,answerIds:t});this.app.getStore().dispatch("vote/setUserVoted",{voteId:this.currentVote.id});BX.UI.Notification.Center.notify({content:d("VOTE_NOTICE_ERROR_MESSAGE_REVOKE"),autoHideDelay:4e3})}}},template:`\n\t\t\t<form class="vote-display">\n\t\t\t\t<div class="vote-display-inner">\n\t\t\t\t\t<VoteQuestion\n\t\t\t\t\t\t:key="formattedQuestion.id"\n\t\t\t\t\t\t:contextId="contextId"\n\t\t\t\t\t\t:isLoading="isLoading"\n\t\t\t\t\t\t:question="formattedQuestion"\n\t\t\t\t\t\t:isUserVoted="isUserVoted"\n\t\t\t\t\t\t:isCompleted="isCompleted"\n\t\t\t\t\t\t:answers="formattedQuestion.answers"\n\t\t\t\t\t\t@answersSelected="answersSelected"\n\t\t\t\t\t/>\n\t\t\t\t\t<div class="vote-display-bottom-container">\n\t\t\t\t\t\t<div v-if="isLoading" class="vote-display__loader">\n\t\t\t\t\t\t\t<Loader />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<ButtonArea v-else\n\t\t\t\t\t\t\t:question="formattedQuestion"\n\t\t\t\t\t\t\t:isLoading="isLoading"\n\t\t\t\t\t\t\t:isUserVoted="isUserVoted"\n\t\t\t\t\t\t\t:isCompleted="isCompleted"\n\t\t\t\t\t\t\t:isBtnActive="hasSelectedAnswers"\n\t\t\t\t\t\t\t@onClickVoteButton="onClickVoteButton"\n\t\t\t\t\t\t\t@showResults="showResults"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div class="vote__notice">\n\t\t\t\t\t\t\t<span class="vote__notice-text">{{ getVoteTypeText }}</span>\n\t\t\t\t\t\t\t<span v-if="isCompleted" class="vote__notice-text">{{ getCompletionVoteText }}</span>\n\t\t\t\t\t\t</div>\n\n\t\t\x3c!--\t\t\t\ttemporary button for testing--\x3e\n\t\t\t\t\t\t<div style="height:22px;display:none;">\n\t\t\t\t\t\t\t<button v-if="canRevoke" @click="recallVote" type="button">\u041f\u0435\u0440\u0435\u0433\u043e\u043b\u043e\u0441\u043e\u0432\u0430\u0442\u044c</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div style="height:22px;display:none;">\n\t\t\t\t\t\t\t<button  v-if="!isCompleted && canEdit" @click="isShowPopup = true" type="button">\u0417\u0430\u0432\u0435\u0440\u0448\u0438\u0442\u044c</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t\t<VotePopup \n\t\t\t\tv-if="isShowPopup" \n\t\t\t\t@confirm="onCompetePopupConfirm"\n\t\t\t\t@cancel="onCompetePopupCancel"\n\t\t\t/>\n\t`};t.VoteDisplay=m})(this.BX.Vote.Component=this.BX.Vote.Component||{},BX,BX.Vote.Service,BX.Vote.Component,BX,BX,BX.Vote,BX.Main,BX.UI.Vue3.Components);
//# sourceMappingURL=vote.bundle.map.js